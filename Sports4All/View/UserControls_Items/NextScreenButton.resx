<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pbNext.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAA7EAAAOxAGVKw4bAAAAB3RJ
        TUUH5AICFRMODXJl0QAAABl0RVh0U29mdHdhcmUAd3d3Lmlua3NjYXBlLm9yZ5vuPBoAAAN/SURBVHhe
        7d3NSxVRGMfxa9m+SApbZN6ZrH0QERH+DZH9CZecGdNA9xMEvXlnjNq06xWkbB9kYf0v2a5wF5HXnsGz
        6XosX86dzrnP9wMPttBm8f15zYJs/G+t+bGhtIjmsiJakbdf5X7Kr1fl7YekiG9O3jl5xLwr+spGYyAr
        o1kJvSa38Zf7Lu83ZT4K/SDPxweTMlq0xN72ZATPWk/OHTK/BUImL/GPbJH/dfJxbxlB4NKF05dtcXd6
        jCBwSRF9toXdzTGCQLXKkWEJ2OkOupdjBAHK2vGELeZejxEEJiua07aQ+zlGEJDq+3lbxP0eIwhEUjav
        2AK6OEYQgPTx2aMS61d3PFfHCAKQtqN3tniujhF4bqoYPS+hnHwruN0xAs+lRXzLFs7lMQKP5XnjQNqO
        X9rCuTxG4LGJ142DEul5dzTXxwg8xgjACMAIIBgBGAEYAQQjACMAI4BgBGAEYAQQjACMAIwAghGAEYAR
        QDACMAIwAghGAEYARgDBCMAIwAggGAEYARgBBCMAIwAjgGAEYARgBBCMAIwAjACCEWBzBDX8j6ZpES9V
        zzKPhU/qeiWQu28eCd/U9UqQzDcvmUfCNzWN4KN5HHxUw5eDTnbvzAnzOPio168E1Y/WM4+Cr3r6StBu
        zpjHwFe9HUB0wzwGPur1l4CkjK+aR8E3NfwhcH16YfS4eRx80uvPfHPL5nHwSU3xO0k7umgeCV/U8LK/
        eWV81zwSvqjpM1+u+aZ6lnksfFDbZ34RL/HPwZ4hvmLEV4z4ihFfMeIrRnzFiK8Y8RUjvmLEV4z4ihFf
        MeIrRnzFiK8Y8RUjvmJV/KRovrAHc3nE9w7xFSO+YsRXjPiKEV8x4itGfMWIrxjxFSO+YsRXjPiKEV8x
        4itGfMWIrxjxFSO+YsRXjPiKEV8x4iuW540DEuaVPZjLI76XkjK6bQ/m8ojvpcl2fEECdbYGc3nE91ZS
        RO/t0Vwd8b11/UF0TCKtb43m6ojvtern4djDuTjie6/6kWj2ePs94gehNwMgfjAk1jV7xL0e8YPSKkeG
        JZyjbwGJHyT5MvDJHnQ3R/xgZWU8bo+60yN+8CTkw61hd3LE7wt5Pj6YlNGiPfK295T4/WSjMZCV0ayE
        XesK/eeV0be0jFPzUeg3rfmxIQk9lxXRityq/PqHRP8ib5ervzeYKU8dNu8K5xqN35ybOkvq5s9cAAAA
        AElFTkSuQmCC
</value>
  </data>
</root>